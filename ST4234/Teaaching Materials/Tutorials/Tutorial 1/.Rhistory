preds <- predict(lm.fit, list(dis = dis.grid), se=TRUE)
plot(nox ~ dis, data = Boston, col = "darkgrey", bty = "n", ylim = c(0.3, .8))
se.bands <- cbind(preds$fit, preds$fit + 2*preds$se.fit, preds$fit - 2* preds$se.fit)
matlines( dis.grid, se.bands, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
lines(dis.grid, preds, col = 'black', lwd = 1.5)
}
sp.fit3 <- lm(nox ~ bs(dis, df = 3))
sp.fit5 <- lm(nox ~ bs(dis, df = 5))
sp.fit6 <- lm(nox ~ bs(dis, df = 6))
sp.fit7 <- lm(nox ~ bs(dis, df = 7))
sp.fit8 <- lm(nox ~ bs(dis, df = 8))
sp.fit9 <- lm(nox ~ bs(dis, df = 9))
sp.fit10 <- lm(nox ~ bs(dis, df = 10))
sp.fit11 <- lm(nox ~ bs(dis, df = 11))
sp.fit12 <- lm(nox ~ bs(dis, df = 12))
sp.fit13 <- lm(nox ~ bs(dis, df = 13))
sp.fit14 <- lm(nox ~ bs(dis, df = 14))
sp.fit15 <- lm(nox ~ bs(dis, df = 15))
sp.fit16 <- lm(nox ~ bs(dis, df = 16))
sp.preds3 <-  predict(sp.fit3, list(dis = dis.grid), se = TRUE)
sp.preds5 <-  predict(sp.fit5, list(dis = dis.grid), se = TRUE)
sp.preds6 <-  predict(sp.fit6, list(dis = dis.grid), se = TRUE)
sp.preds7 <-  predict(sp.fit7, list(dis = dis.grid), se = TRUE)
sp.preds8 <-  predict(sp.fit8, list(dis = dis.grid), se = TRUE)
sp.preds9 <-  predict(sp.fit9, list(dis = dis.grid), se = TRUE)
sp.preds10 <-  predict(sp.fit10, list(dis = dis.grid), se = TRUE)
sp.preds11 <-  predict(sp.fit11, list(dis = dis.grid), se = TRUE)
sp.preds12 <-  predict(sp.fit12, list(dis = dis.grid), se = TRUE)
sp.preds13 <-  predict(sp.fit13, list(dis = dis.grid), se = TRUE)
sp.preds14 <-  predict(sp.fit14, list(dis = dis.grid), se = TRUE)
sp.preds15 <-  predict(sp.fit15, list(dis = dis.grid), se = TRUE)
sp.preds16 <-  predict(sp.fit16, list(dis = dis.grid), se = TRUE)
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "3 degrees of freedom")
matlines( dis.grid, se.bands3, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
se.bands3 <- cbind( sp.preds3$fit, sp.preds3$fit + 2* sp.preds3$se.fit, sp.preds3$fit - 2* sp.preds3$se.fit)
se.bands5 <- cbind( sp.preds5$fit, sp.preds5$fit + 2* sp.preds5$se.fit, sp.preds5$fit - 2* sp.preds5$se.fit)
se.bands6 <- cbind( sp.preds6$fit, sp.preds6$fit + 2* sp.preds6$se.fit, sp.preds6$fit - 2* sp.preds6$se.fit)
se.bands7 <- cbind( sp.preds7$fit, sp.preds7$fit + 2* sp.preds7$se.fit, sp.preds7$fit - 2* sp.preds7$se.fit)
se.bands8 <- cbind( sp.preds8$fit, sp.preds8$fit + 2* sp.preds8$se.fit, sp.preds8$fit - 2* sp.preds8$se.fit)
se.bands9 <- cbind( sp.preds9$fit, sp.preds9$fit + 2* sp.preds9$se.fit, sp.preds9$fit - 2* sp.preds9$se.fit)
se.bands10 <- cbind( sp.preds10$fit, sp.preds10$fit + 2* sp.preds10$se.fit, sp.preds10$fit - 2* sp.preds10$se.fit)
se.bands11 <- cbind( sp.preds11$fit, sp.preds11$fit + 2* sp.preds11$se.fit, sp.preds11$fit - 2* sp.preds11$se.fit)
se.bands12 <- cbind( sp.preds12$fit, sp.preds12$fit + 2* sp.preds12$se.fit, sp.preds12$fit - 2* sp.preds12$se.fit)
se.bands13 <- cbind( sp.preds13$fit, sp.preds13$fit + 2* sp.preds13$se.fit, sp.preds13$fit - 2* sp.preds13$se.fit)
se.bands14 <- cbind( sp.preds14$fit, sp.preds14$fit + 2* sp.preds14$se.fit, sp.preds14$fit - 2* sp.preds14$se.fit)
se.bands15 <- cbind( sp.preds15$fit, sp.preds15$fit + 2* sp.preds15$se.fit, sp.preds15$fit - 2* sp.preds15$se.fit)
se.bands16 <- cbind( sp.preds16$fit, sp.preds16$fit + 2* sp.preds16$se.fit, sp.preds16$fit - 2* sp.preds16$se.fit)
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "3 degrees of freedom")
matlines( dis.grid, se.bands3, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "3 degrees of freedom")
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "3 degrees of freedom")
matlines( dis.grid, se.bands3, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "5 degrees of freedom")
matlines( dis.grid, se.bands5, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "6 degrees of freedom")
matlines( dis.grid, se.bands6, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "7 degrees of freedom")
matlines( dis.grid, se.bands7, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "8 degrees of freedom")
matlines( dis.grid, se.bands8, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "9 degrees of freedom")
matlines( dis.grid, se.bands9, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "10 degrees of freedom")
matlines( dis.grid, se.bands10, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "11 degrees of freedom")
matlines( dis.grid, se.bands11, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "12 degrees of freedom")
matlines( dis.grid, se.bands12, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "13 degrees of freedom")
matlines( dis.grid, se.bands13, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "14 degrees of freedom")
matlines( dis.grid, se.bands14, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "13 degrees of freedom")
matlines( dis.grid, se.bands13, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "14 degrees of freedom")
matlines( dis.grid, se.bands14, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "15 degrees of freedom")
matlines( dis.grid, se.bands15, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "16 degrees of freedom")
matlines( dis.grid, se.bands16, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
### reporting resulting RSS
rss.errors[-c(1, 2)]
### reporting resulting RSS
rss.errors[-c(1, 2)]
which.min(rss.errors[-c(1, 2)])
which.min(rss.errors)
?cv.glm
?glm
cv.errors[i] <- cv.glm(Boston, fit, K=10)$delta[1]
for (i in 3:16){
fit <- glm(nox ~ bs(dis, df=i), data=Boston)
cv.errors[i] <- cv.glm(Boston, fit, K=10)$delta[1]
}
cv.errors
library(boot)
?cv.glm
cv.errors
for (i in 3:16){
fit <- glm(nox ~ bs(dis, df=i), data=Boston)
cv.errors[i] <- cv.glm(Boston, fit, K=10)$delta[1]
}
cv.errors <- rep(NA, 13)
library(boot)
for (i in 3:16){
fit <- glm(nox ~ bs(dis, df=i), data=Boston)
cv.errors[i] <- cv.glm(Boston, fit, K=10)$delta[1]
}
cv.errors
warnings()
which.min(cv.errors)
plot(3:15, cv.errors[3:15], type='b')
points(which.min(cv.errors), cv.errors[8], pch=20, cex=2, col="red")
which.min(cv.errors)
points(which.min(cv.errors), cv.errors[10], pch=20, cex=2, col="red")
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "10 degrees of freedom")
matlines( dis.grid, se.bands10, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
## part (a)
dis.range <- range(dis) #[1.1, 12.1]
sp.fit <- lm(nox ~ bs(dis, df = 4))
### output
summary(sp.fit)
dis.grid <- seq(from = dis.range[1], to = dis.range[2], by = 0.05)
sp.preds <-  predict(sp.fit, list(dis = dis.grid), se = TRUE)
par(mfrow=c(1, 1))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "4 degrees of freedom")
se.bands <- cbind( sp.preds$fit, sp.preds$fit + 2* sp.preds$se.fit, sp.preds$fit - 2* sp.preds$se.fit)
matlines( dis.grid, se.bands, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
dis.range
cut(dis.range,3)
cut(dis.range,4)
cut(dis.range,2)
quantile(dis.range)
### plot of fits
sp.fit3 <- lm(nox ~ bs(dis, df = 3))
sp.fit5 <- lm(nox ~ bs(dis, df = 5))
sp.fit6 <- lm(nox ~ bs(dis, df = 6))
sp.fit7 <- lm(nox ~ bs(dis, df = 7))
sp.fit8 <- lm(nox ~ bs(dis, df = 8))
sp.fit9 <- lm(nox ~ bs(dis, df = 9))
sp.fit10 <- lm(nox ~ bs(dis, df = 10))
sp.fit11 <- lm(nox ~ bs(dis, df = 11))
sp.fit12 <- lm(nox ~ bs(dis, df = 12))
sp.fit13 <- lm(nox ~ bs(dis, df = 13))
sp.fit14 <- lm(nox ~ bs(dis, df = 14))
sp.fit15 <- lm(nox ~ bs(dis, df = 15))
sp.fit16 <- lm(nox ~ bs(dis, df = 16))
### plot
dis.grid <- seq(from = dis.range[1], to = dis.range[2], by = 0.05)
sp.preds3 <-  predict(sp.fit3, list(dis = dis.grid), se = TRUE)
sp.preds5 <-  predict(sp.fit5, list(dis = dis.grid), se = TRUE)
sp.preds6 <-  predict(sp.fit6, list(dis = dis.grid), se = TRUE)
sp.preds7 <-  predict(sp.fit7, list(dis = dis.grid), se = TRUE)
sp.preds8 <-  predict(sp.fit8, list(dis = dis.grid), se = TRUE)
sp.preds9 <-  predict(sp.fit9, list(dis = dis.grid), se = TRUE)
sp.preds10 <-  predict(sp.fit10, list(dis = dis.grid), se = TRUE)
sp.preds11 <-  predict(sp.fit11, list(dis = dis.grid), se = TRUE)
sp.preds12 <-  predict(sp.fit12, list(dis = dis.grid), se = TRUE)
sp.preds13 <-  predict(sp.fit13, list(dis = dis.grid), se = TRUE)
sp.preds14 <-  predict(sp.fit14, list(dis = dis.grid), se = TRUE)
sp.preds15 <-  predict(sp.fit15, list(dis = dis.grid), se = TRUE)
sp.preds16 <-  predict(sp.fit16, list(dis = dis.grid), se = TRUE)
se.bands3 <- cbind( sp.preds3$fit, sp.preds3$fit + 2* sp.preds3$se.fit, sp.preds3$fit - 2* sp.preds3$se.fit)
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "3 degrees of freedom")
matlines( dis.grid, se.bands3, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8))
se.bands <- cbind( sp.preds$fit, sp.preds$fit + 2* sp.preds$se.fit, sp.preds$fit - 2* sp.preds$se.fit)
matlines( dis.grid, se.bands, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "4 degrees of freedom")
se.bands <- cbind( sp.preds$fit, sp.preds$fit + 2* sp.preds$se.fit, sp.preds$fit - 2* sp.preds$se.fit)
matlines( dis.grid, se.bands, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
eedom")
matlines( dis.grid, se.bands3, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "3 degrees of freedom")
matlines( dis.grid, se.bands3, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "5 degrees of freedom")
matlines( dis.grid, se.bands5, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "6 degrees of freedom")
matlines( dis.grid, se.bands6, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "7 degrees of freedom")
matlines( dis.grid, se.bands7, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "8 degrees of freedom")
matlines( dis.grid, se.bands8, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "10 degrees of freedom")
matlines( dis.grid, se.bands10, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "9 degrees of freedom")
matlines( dis.grid, se.bands9, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "11 degrees of freedom")
matlines( dis.grid, se.bands11, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "12 degrees of freedom")
matlines( dis.grid, se.bands12, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "12 degrees of freedom")
matlines( dis.grid, se.bands12, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "13 degrees of freedom")
matlines( dis.grid, se.bands13, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "14 degrees of freedom")
matlines( dis.grid, se.bands14, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "15 degrees of freedom")
matlines( dis.grid, se.bands15, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "16 degrees of freedom")
matlines( dis.grid, se.bands16, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "11 degrees of freedom")
matlines( dis.grid, se.bands11, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
### reporting resulting RSS
rss.errors[-c(1, 2)]
which.min(rss.errors)
### plot of resulting rss
plot(rss.errors[-c(1, 2)])
plot(3:15, rss.errors[3:15], type='b')
points(which.min(rss.errors), rss.errors[14], pch=20, cex=2, col="red") #14
points(which.min(rss.errors), rss.errors[14], pch=20, cex=1.5, col="red") #14
### plot of resulting rss
plot(rss.errors[-c(1, 2)])
plot(3:15, rss.errors[3:15], type='b')
points(which.min(rss.errors), rss.errors[14], pch=20, cex=1.5, col="red") #14
points(which.min(rss.errors), rss.errors[14], pch=20, cex=2, col="red") #14
plot(3:15, rss.errors[3:16], type='b')
### reporting resulting RSS
rss.errors[-c(1, 2)]
### reporting resulting RSS
length(rss.errors[-c(1, 2)])
which.min(rss.errors)
points(which.min(rss.errors), rss.errors[16], pch=20, cex=2, col="red") #14
plot(3:15, rss.errors[3:15], type='b')
points(which.min(rss.errors), rss.errors[16], pch=20, cex=2, col="red") #14
### plot of resulting rss
plot(rss.errors[-c(1, 2)])
plot(3:16, rss.errors[3:16], type='b')
### plot of resulting rss
plot(rss.errors[-c(1, 2)])
plot(3:16, rss.errors[3:16], type='b')
points(which.min(rss.errors), rss.errors[16], pch=20, cex=2, col="red") #14
plot(3:16, rss.errors[3:16], type='b')
points(which.min(rss.errors), rss.errors[14], pch=20, cex=2, col="red") #14
## part (c)
set.seed(5)
cv.errors <- rep(NA, 13)
library(boot)
for (i in 3:16){
fit <- glm(nox ~ bs(dis, df=i), data=Boston)
cv.errors[i] <- cv.glm(Boston, fit, K=10)$delta[1]
}
cv.errors
which.min(cv.errors)
plot(3:15, cv.errors[3:15], type='b')
points(which.min(cv.errors), cv.errors[10], pch=20, cex=2, col="red")
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "10 degrees of freedom")
matlines( dis.grid, se.bands10, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
cv.errors
which.min(cv.errors)
plot(3:16, cv.errors[3:16], type='b')
points(which.min(cv.errors), cv.errors[10], pch=20, cex=2, col="red")
plot(nox ~ dis, col = "darkgrey", bty = "n", ylim = c(0.3, .8), main = "8 degrees of freedom")
matlines( dis.grid, se.bands8, col = c("blue", "black", "black"), lwd = 1.5, lty = c("solid", "dashed", "dashed"))
summary(sp.fit8)
detach(Boston)
attach(College)
str(College)
df1 <- data.table(College)
nrow(College)
df1 <- College
split <- sample(1:2, size=nrow(df1), prob = c(0.7, 0.3), replace = TRUE)
df.train <- df1[split==1,]
df.test <- df1[split==2,]
str(df1)
reg.summary(reg.fit)
reg.fit <- regsubsets(Outstate ~ ., data = df.train, nvmax = 17, method = "forward")
reg.summary(reg.fit)
#Question 2
library(leaps)
reg.fit <- regsubsets(Outstate ~ ., data = df.train, nvmax = 17, method = "forward")
reg.summary(reg.fit)
reg.summary <- summary(reg.fit)
fwd.summary <- summary(reg.fit)
names(fwd.summary)
#Best Models according to Cp, BIC, R2-adj
fwd.summary$rsq
par(mfrow=c(1,1))
plot(fwd.summary$rss,xlab="Number of Variables",ylab="RSS",type="l")
plot(fwd.summary$adjr2,xlab="Number of Variables",ylab="Adjusted R2",type="l", main = "Choosing Best Model According to Adjusted R2")
which.max(fwd.summary$adjr2) #4
points(13,fwd.summary$adjr2[13], col="red",cex=2,pch=20)
round(coef(regfit.fwd,13),3)
regfit.fwd <- regsubsets(Outstate ~ ., data = df.train, nvmax = 17, method = "forward")
fwd.summary <- summary(reg.fit)
names(fwd.summary)
#Best Models according to Cp, BIC, R2-adj
fwd.summary$rsq
par(mfrow=c(1,1))
plot(fwd.summary$rss,xlab="Number of Variables",ylab="RSS",type="l")
plot(fwd.summary$adjr2,xlab="Number of Variables",ylab="Adjusted R2",type="l", main = "Choosing Best Model According to Adjusted R2")
which.max(fwd.summary$adjr2) #13
points(13,fwd.summary$adjr2[13], col="red",cex=2,pch=20)
round(coef(regfit.fwd,13),3)
plot(fwd.summary$cp,xlab="Number of Variables",ylab="Cp",type='l', main = "Choosing Best Model According to Cp")
which.min(fwd.summary$cp) #4
points(4,fwd.summary$cp[4],col="red",cex=2,pch=20)
points(13,fwd.summary$cp[13],col="red",cex=2,pch=20)
round(coef(regfit.fwd,13),3)
plot(fwd.summary$cp,xlab="Number of Variables",ylab="Cp",type='l', main = "Choosing Best Model According to Cp")
which.min(fwd.summary$cp) #13
points(13,fwd.summary$cp[13],col="red",cex=2,pch=20)
round(coef(regfit.fwd,13),3)
which.min(fwd.summary$bic) #3
which.min(fwd.summary$bic) #6
plot(fwd.summary$bic,xlab="Number of Variables",ylab="BIC",type='l', main = "Choosing Best Model According to BIC")
points(6,fwd.summary$bic[6],col="red",cex=2,pch=20)
round(coef(regfit.fwd,6),3)
co <- coef(regfit.fwd, id = 6)
names(co)
gam.fit <- gam(Outstate ~ Private + s(Room.Board, df = 2) + s(Terminal, df = 2) + s(perc.alumni, df = 2) + s(Expend, df = 2) + s(Grad.Rate, df = 2), data = dt.train)
par(mfrow = c(2, 3))
library(GAM)
library(gam)
library(caret)
gam.fit <- gam(Outstate ~ Private + s(Room.Board, df = 2) + s(Terminal, df = 2) + s(perc.alumni, df = 2) + s(Expend, df = 2) + s(Grad.Rate, df = 2), data = dt.train)
par(mfrow = c(2, 3))
library(gam)
install.packages(gam)
install.packages('gam')
gam.fit <- gam(Outstate ~ Private + s(Room.Board, df = 2) + s(Terminal, df = 2) + s(perc.alumni, df = 2) + s(Expend, df = 2) + s(Grad.Rate, df = 2), data = dt.train)
library(gam)
gam.fit <- gam(Outstate ~ Private + s(Room.Board, df = 2) + s(Terminal, df = 2) + s(perc.alumni, df = 2) + s(Expend, df = 2) + s(Grad.Rate, df = 2), data = dt.train)
gam.fit <- gam(Outstate ~ Private + s(Room.Board, df = 2) + s(Terminal, df = 2) + s(perc.alumni, df = 2) + s(Expend, df = 2) + s(Grad.Rate, df = 2), data = df.train)
par(mfrow = c(2, 3))
plot(gam.fit, se = T, col = "red")
par(mfrow = c(3, 2))
plot(gam.fit, se = T, col = "red")
gam.pred <- predict(gam.fit, df.test)
gam.err <- mean((df.test$Outstate - gam.pred)^2)
gam.err
lm.pred <- predict(lm(Outstate~Private+Room.Board+Terminal+perc.alumni+Expend+Grad.Rate, data = df.train), df.test)
lm.err <- mean((df.test$Outstate - lm.pred)^2)
lm.err
summary(gam.fit)
plot(gam.fit, se = T, col = "blue")
val.errors <- rep(NA,17)
for(i in 1:17){
coefi <- coef(regfit.fwd,id=i)
pred <- test_matrix[,names(coefi)]%*%coefi
val.errors[i] <- mean((df.test$Outstate-pred)^2)
}
which.min(val.errors)
test_matrix <- model.matrix(Outstate~., data=df.test)
val.errors <- rep(NA,17)
for(i in 1:17){
coefi <- coef(regfit.fwd,id=i)
pred <- test_matrix[,names(coefi)]%*%coefi
val.errors[i] <- mean((df.test$Outstate-pred)^2)
}
which.min(val.errors)
points(which.min(val.errors), val.errors[17], col='red', pch=20, cex=2)
plot(val.errors, type='b')
points(which.min(val.errors), val.errors[17], col='red', pch=20, cex=2)
plot(fwd.summary$cp,xlab="Number of Variables",ylab="Cp",type='l', main = "Choosing Best Model According to Cp")
which.min(fwd.summary$cp) #13
points(13,fwd.summary$cp[13],col="red",cex=2,pch=20)
par(mfrow=c(1,1))
points(which.min(val.errors), val.errors[17], col='red', pch=20, cex=2)
dev.off()
plot(val.errors, type='b')
points(which.min(val.errors), val.errors[17], col='red', pch=20, cex=2)
preds <- predict(gam.fit, newdata = df.test)
error <- mean((df.test$Outstate-preds)^2)
val.errors[6]-error
val.errors[6]-errorval.errors[6]-error
summary(gam.fit)
summary(gam.fit)
error
summary(regfit.fwd)
fwd.summary <- summary(reg.fit)
fwd.summary
fwd.summary$rsq
fwd.summary$bic
summary(gam.fit)
str(df1)
regfit.fwd <- regsubsets(Outstate ~ ., data = df.train, nvmax = 17, method = "forward")
fwd.summary <- summary(reg.fit)
names(fwd.summary)
par(mfrow=c(3,1))
plot(fwd.summary$rss,xlab="Number of Variables",ylab="RSS",type="l")
plot(fwd.summary$adjr2,xlab="Number of Variables",ylab="Adjusted R2",type="l", main = "Choosing Best Model According to Adjusted R2")
dev.off()
plot(fwd.summary$adjr2,xlab="Number of Variables",ylab="Adjusted R2",type="l", main = "Choosing Best Model According to Adjusted R2")
which.max(fwd.summary$adjr2) #13
points(13,fwd.summary$adjr2[13], col="red",cex=2,pch=20)
par(mfrow=c(3,1))
plot(fwd.summary$adjr2,xlab="Number of Variables",ylab="Adjusted R2",type="l", main = "Choosing Best Model According to Adjusted R2")
which.max(fwd.summary$adjr2) #13
points(13,fwd.summary$adjr2[13], col="red",cex=2,pch=20)
round(coef(regfit.fwd,13),3)
plot(fwd.summary$cp,xlab="Number of Variables",ylab="Cp",type='l', main = "Choosing Best Model According to Cp")
which.min(fwd.summary$cp) #13
points(13,fwd.summary$cp[13],col="red",cex=2,pch=20)
round(coef(regfit.fwd,13),3)
which.min(fwd.summary$bic) #6
plot(fwd.summary$bic,xlab="Number of Variables",ylab="BIC",type='l', main = "Choosing Best Model According to BIC")
points(6,fwd.summary$bic[6],col="red",cex=2,pch=20)
round(coef(regfit.fwd,6),3)
co <- coef(regfit.fwd, id = 6)
par(mfrow=c(2,2))
plot(fwd.summary$rss,xlab="Number of Variables",ylab="RSS",type="l")
plot(fwd.summary$adjr2,xlab="Number of Variables",ylab="Adjusted R2",type="l", main = "Choosing Best Model According to Adjusted R2")
which.max(fwd.summary$adjr2) #13
points(13,fwd.summary$adjr2[13], col="red",cex=2,pch=20)
round(coef(regfit.fwd,13),3)
plot(fwd.summary$cp,xlab="Number of Variables",ylab="Cp",type='l', main = "Choosing Best Model According to Cp")
which.min(fwd.summary$cp) #13
par(mfrow=c(2,2))
plot(fwd.summary$rss,xlab="Number of Variables",ylab="RSS",type="l")
plot(fwd.summary$adjr2,xlab="Number of Variables",ylab="Adjusted R2",type="l", main = "Adjusted R2")
which.max(fwd.summary$adjr2) #13
points(13,fwd.summary$adjr2[13], col="red",cex=2,pch=20)
round(coef(regfit.fwd,13),3)
plot(fwd.summary$cp,xlab="Number of Variables",ylab="Cp",type='l', main = "Cp")
which.min(fwd.summary$cp) #13
points(13,fwd.summary$cp[13],col="red",cex=2,pch=20)
round(coef(regfit.fwd,13),3)
which.min(fwd.summary$bic) #6
plot(fwd.summary$bic,xlab="Number of Variables",ylab="BIC",type='l', main = "BIC")
points(6,fwd.summary$bic[6],col="red",cex=2,pch=20)
summary(regfit.fwd)
regfit.fwd <- regsubsets(Outstate ~ ., data = df.train, nvmax = 17, method = "forward")
fwd.summary <- summary(regfit.fwd)
names(fwd.summary)
###Best Models according to Cp, BIC, R2-adj
fwd.summary$rsq
par(mfrow=c(2,2))
plot(fwd.summary$rss,xlab="Number of Variables",ylab="RSS",type="l")
plot(fwd.summary$adjr2,xlab="Number of Variables",ylab="Adjusted R2",type="l", main = "Adjusted R2")
which.max(fwd.summary$adjr2) #13
points(13,fwd.summary$adjr2[13], col="red",cex=2,pch=20)
round(coef(regfit.fwd,13),3)
plot(fwd.summary$cp,xlab="Number of Variables",ylab="Cp",type='l', main = "Cp")
which.min(fwd.summary$cp) #13
points(13,fwd.summary$cp[13],col="red",cex=2,pch=20)
round(coef(regfit.fwd,13),3)
which.min(fwd.summary$bic) #6
plot(fwd.summary$bic,xlab="Number of Variables",ylab="BIC",type='l', main = "BIC")
points(6,fwd.summary$bic[6],col="red",cex=2,pch=20)
round(coef(regfit.fwd,6),3)
co <- coef(regfit.fwd, id = 6)
names(co) #Private, Room Board, Terminal, Perc.Alumni, Expenditure, Grad Rate
test_matrix <- model.matrix(Outstate~., data=df.test)
fwd.summary
fwd.summary
fwd.summary$which
fwd.summary$obj
fwd.summary$outmat
coef(regfit.fwd)
coef(regfit.fwd, id = 17)
par(mfrow(c=(1,1)))
par(mfrow=c(1,1))
test_matrix <- model.matrix(Outstate~., data=df.test)
val.errors <- rep(NA,17)
for(i in 1:17){
coefi <- coef(regfit.fwd,id=i)
pred <- test_matrix[,names(coefi)]%*%coefi
val.errors[i] <- mean((df.test$Outstate-pred)^2)
}
which.min(val.errors) #17
plot(val.errors, type='b')
points(which.min(val.errors), val.errors[17], col='red', pch=20, cex=2)
co <- coef(regfit.fwd, id = 6)
names(co) #Private, Room Board, Terminal, Perc.Alumni, Expenditure, Grad Rate
co
names(co) #Private, Room Board, Terminal, Perc.Alumni, Expenditure, Grad Rate
round(co,3)
##part(b)
gam.fit <- gam(Outstate ~ Private + s(Room.Board, df = 2) + s(Terminal, df = 2) + s(perc.alumni, df = 2) + s(Expend, df = 2) + s(Grad.Rate, df = 2), data = df.train)
par(mfrow = c(3, 2))
plot(gam.fit, se = T, col = "blue")
par(mfrow = c(2,3))
plot(gam.fit, se = T, col = "blue")
par(mfrow = c(3, 2))
plot(gam.fit, se = T, col = "blue")
par(mfrow = c(2,3))
plot(gam.fit, se = T, col = "blue")
##part(b)
gam.fit <- gam(Outstate ~ Private + s(Room.Board, df = 3) + s(Terminal, df = 3) + s(perc.alumni, df = 3) + s(Expend, df = 3) + s(Grad.Rate, df = 3), data = df.train)
par(mfrow = c(3, 2))
par(mfrow = c(2,3))
plot(gam.fit, se = T, col = "blue")
gam.pred <- predict(gam.fit, df.test)
gam.err <- mean((df.test$Outstate - gam.pred)^2)
gam.err #Expend and Grad Rate
preds <- predict(gam.fit, newdata = df.test)
error <- mean((df.test$Outstate-preds)^2)
error
val.errors[6]-error
par(mfrow=c(1,1))
gam.m1 <- gam(Outstate~Private+s(Terminal,df=3)+s(perc.alumni,df=3)+s(Expend,df=3)+s(Grad.Rate,df=3),data=df.train)
gam.m2 <- gam(Outstate~Private+Room.Board+s(Terminal,df=3)+s(perc.alumni,df=3)+s(Expend,df=3)+s(Grad.Rate,df=3),data=df.train)
gam.m3 <- gam(Outstate~Private+s(Room.Board,df=3)+s(Terminal,df=3)+s(perc.alumni,df=3)+s(Expend,df=3)+s(Grad.Rate,df=3),data=df.train)
anova(gam.m1, gam.m2, gam.m3, test = "F")
gam.n1 <- gam(Outstate~Private+s(Room.Board,df=3)+s(Terminal,df=3)+s(perc.alumni,df=3)+s(Expend,df=3),data=df.train)
gam.n2 <- gam(Outstate~Private+s(Room.Board,df=3)+s(Terminal,df=3)+s(perc.alumni,df=3)+s(Expend,df=3)+Grad.Rate,data=df.train)
gam.n3 <- gam(Outstate~Private+s(Room.Board,df=3)+s(Terminal,df=3)+s(perc.alumni,df=3)+s(Expend,df=3)+s(Grad.Rate,df=3),data=df.train)
anova(gam.n1, gam.n2, gam.n3, test = "F")
gam.fit <- gam(Outstate ~ Private + s(Room.Board, df = 2) + s(Terminal, df = 3) + s(perc.alumni, df = 3) + s(Expend, df = 3) + s(Grad.Rate, df = 2), data = df.train)
preds <- predict(gam.fit, newdata = df.test)
error <- mean((df.test$Outstate-preds)^2)
error
summary(gam.fit)
val.errors[6]-error
error
gam.fit <- gam(Outstate ~ Private + s(Room.Board, df = 2) + s(Terminal, df = 3) + s(perc.alumni, df = 3) + s(Expend, df = 3) + s(Grad.Rate, df = 2), data = df.train)
preds <- predict(gam.fit, newdata = df.test)
error <- mean((df.test$Outstate-preds)^2)
error
val.errors[6]-error
summary(gam.fit)
